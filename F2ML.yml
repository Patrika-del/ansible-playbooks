---


- name: "Create Azure resources"
  connection: local
  hosts: localhost
  # vars_prompt:
  #   - name: "location"
  #     prompt: "Choose region to deploy VMs"
  #     private: no
  #     default: "westeurope"
  
  vars: 
    - resourcegroup_name: "CLOUD_LAB1"  # "{{project_prefix}}-rg
    - local_ip: 41.137.37.226
    - location: "westeurope"
  tasks:
    
    - name: Include  Var File
      include_vars: myvars.yml

    - name: Create Vnets
      azure_rm_virtualnetwork:
        resource_group: "{{resourcegroup_name}}"
        name: "{{item.name}}" 
        address_prefixes: "{{item.cidr}}" 
      with_items:
        - "{{vnet_list}}"   
    
    - name: Add a subnet 
      azure_rm_subnet:
          resource_group: "{{ resourcegroup_name}}"
          virtual_network: "{{ item.vnet }}"
          name: "{{ item.name }}"
          address_prefix: "{{ item.cidr }}"
      with_items:
        - "{{subnet_list}}"
    
    # - name: Create Network Security Group 
    #   azure_rm_securitygroup:
    #      resource_group: "{{ resourcegroup_name }}"   
    #      name: "{{ item.name }}"
    #      rules: 
    #       - name: 'AllowSSH'
    #         protocol: 'Tcp'
    #         source_address_prefix: "{{local_ip}}"
    #         destination_port_range: 22
    #         access: "Allow"
    #         priority: 1000
    #         direction: Inbound
    #   with_items:
    #     - "{{nsg_list}}"

    # - name: create public IP address
    #   azure_rm_publicipaddress:
    #      resource_group: "{{ resourcegroup_name }}"
    #      allocation_method: "{{ item.allocation_method }}"
    #      sku: "{{item.sku}}" 
    #      name: "{{ item.name }}"
    #   with_items:
    #       - "{{ pip_list}}"
         

    # - name: create Availibility Set 
    #   azure_rm_availabilityset:
    #       resource_group: "{{ resourcegroup_name }}"
    #       name: "{{ item.name }}"
    #       location: "{{ location }}"
    #       platform_fault_domain_count: "{{ item.UF }}" 
    #       platform_update_domain_count:  "{{ item.UD }}"
    #       sku: "{{ item.sku }}"
    #   with_items:
    #     - "{{a_set_list}}"


          
    - name: Create Network Interface Card 
      azure_rm_networkinterface:
         resource_group: "{{resourcegroup_name}}" 
         name: "{{ item.name }}"
         virtual_network: "{{ item.vnet }}"
         subnet: "{{ item.subnet }}"
         security_group: "{{ item.nsg }}"
        # public_ip_address_name:  "{{ item.pip }}"
      with_items:
        - "{{nic_list}}"
      register: output_nic

    - debug:
       var:  AppGtw-Subnet.state.id
    - name: Create VMS
      azure_rm_virtualmachine: 
          resource_group: "{{resourcegroup_name }}"
          name: "{{ item.name }}"
          vm_size: "{{ item.vmsize }}"
          admin_username: "{{ item.admin_username }}"
          admin_password: "{{ item.admin_password }}"
          network_interfaces: "{{ item.nic }}"
          managed_disk_type: "{{ item.osdisk_type }}"
          os_disk_size_gb: "{{ item.osdisk_size }}"
          #availability_set: "{{ item.a_set }}"
          image:
            offer: UbuntuServer
            publisher: Canonical
            sku: '16.04-LTS'  
            version: latest
      with_items:
          - "{{vms_list}}"
      
    - name: Create an image from a virtual machine
      azure_rm_image:
        resource_group: "{{resourcegroup_name}}"
        name: foobar
        source: instance-vm
   
    # - name: Create a Traffic Manager Profile
    #   azure_rm_trafficmanagerprofile:
    #       name: "{{item.name}}"
    #       resource_group: "{{resourcegroup_name}}"
    #       location: global
    #       profile_status: enabled
    #       routing_method: performance
    #       dns_config:
    #         relative_name: "{{item.RelativeDnsName}}"
    #         ttl: "{{item.Ttl}}"
    #       monitor_config:
    #         protocol: "{{item.MonitorProtocol}}"
    #         port: "{{item.MonitorPort}}"
    #         path: "{{item.MonitorPath}}"
    #   with_items:
    #     - "{{traffic_manager}}"

    # - name: Create instance of Application Gateway
    #   azure_rm_appgateway:
    #       resource_group: "{{resourcegroup_name}}"
    #       name: "{{item.name}}"
    #       sku:
    #        name: "{{item.sku.name}}"
    #        tier: "{{item.sku.tier}}"
    #        capacity: "{{item.sku.capacity}}"
    #       gateway_ip_configurations:
    #        - subnet:
    #          id: "{{ item.GtwConfigSubnetId}}"
    #          name: "{{item.GtwConfigname}}"
    #       frontend_ip_configurations:
    #         - public_ip_address: "{{ item.frontendconfpip }}"
    #           name: "{{item.frontendconfname}}"
    #       frontend_ports:
    #         - port: "{{item.frontendport}}"
    #           name: "{{item.frontendname}}"
    #       backend_address_pools:
    #         - backend_addresses:
    #            - ip_address: output_nic.results[2].state.ip_configurations[0].private_ip_address
    #            - ip_address: output_nic.results[3].state.ip_configurations[0].private_ip_address
    #           name: "{{item.backendpoolname}}"
    #       backend_http_settings_collection:
    #         - port: 80 #"{{item.backend_http_settings_collection.port}}"
    #           protocol: http #"{{item.backend_http_settings_collection.protocol}}"
    #           cookie_based_affinity: enabled #"{{item.backend_http_settings_collection.cookie_based_affinity}}"
    #           name: sample_appgateway_http_settings #"{{item.backend_http_settings_collection.name}}"
    #       http_listeners:
    #         - frontend_ip_configuration: "{{item.httplisteners_frontend_ip_configuration}}"
    #           frontend_port: "{{item.httplisteners_frontend_port}}"
    #           name: "{{item.httplisteners_name}}"
    #       request_routing_rules:
    #         - rule_type: "{{item.routing_rule_type}}"
    #           backend_address_pool: "{{item.backendpoolname}}"
    #           backend_http_settings: "{{item.routing_backend_http_settings}}"
    #           http_listener: "{{item.routing_http_listener}}"
    #           name: "{{item.routing_rule_name}}"
    #   with_items:
    #     - "{{App_Gtw}}"
